<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.offcn.mapper.ComparisonMapper" >
  <resultMap id="BaseResultMap" type="cn.offcn.entity.Comparison" >
    <id column="cid" property="cid" jdbcType="INTEGER" />
    <result column="company" property="company" jdbcType="VARCHAR" />
    <result column="turnonver" property="turnonver" jdbcType="DOUBLE" />
    <result column="targetmoney" property="targetmoney" jdbcType="DOUBLE" />
    <result column="plan" property="plan" jdbcType="VARCHAR" />
    <result column="disparity" property="disparity" jdbcType="VARCHAR" />
    <result column="emp_fk" property="empFk" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    cid, company, turnonver, targetmoney, plan, disparity, emp_fk
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.offcn.entity.ComparisonExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comparison
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from comparison
    where cid = #{cid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from comparison
    where cid = #{cid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.offcn.entity.ComparisonExample" >
    delete from comparison
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.offcn.entity.Comparison" >
    insert into comparison (cid, company, turnonver, 
      targetmoney, plan, disparity, 
      emp_fk)
    values (#{cid,jdbcType=INTEGER}, #{company,jdbcType=VARCHAR}, #{turnonver,jdbcType=DOUBLE}, 
      #{targetmoney,jdbcType=DOUBLE}, #{plan,jdbcType=VARCHAR}, #{disparity,jdbcType=VARCHAR}, 
      #{empFk,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.offcn.entity.Comparison" >
    insert into comparison
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="cid != null" >
        cid,
      </if>
      <if test="company != null" >
        company,
      </if>
      <if test="turnonver != null" >
        turnonver,
      </if>
      <if test="targetmoney != null" >
        targetmoney,
      </if>
      <if test="plan != null" >
        plan,
      </if>
      <if test="disparity != null" >
        disparity,
      </if>
      <if test="empFk != null" >
        emp_fk,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="cid != null" >
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="company != null" >
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="turnonver != null" >
        #{turnonver,jdbcType=DOUBLE},
      </if>
      <if test="targetmoney != null" >
        #{targetmoney,jdbcType=DOUBLE},
      </if>
      <if test="plan != null" >
        #{plan,jdbcType=VARCHAR},
      </if>
      <if test="disparity != null" >
        #{disparity,jdbcType=VARCHAR},
      </if>
      <if test="empFk != null" >
        #{empFk,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.offcn.entity.ComparisonExample" resultType="java.lang.Integer" >
    select count(*) from comparison
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update comparison
    <set >
      <if test="record.cid != null" >
        cid = #{record.cid,jdbcType=INTEGER},
      </if>
      <if test="record.company != null" >
        company = #{record.company,jdbcType=VARCHAR},
      </if>
      <if test="record.turnonver != null" >
        turnonver = #{record.turnonver,jdbcType=DOUBLE},
      </if>
      <if test="record.targetmoney != null" >
        targetmoney = #{record.targetmoney,jdbcType=DOUBLE},
      </if>
      <if test="record.plan != null" >
        plan = #{record.plan,jdbcType=VARCHAR},
      </if>
      <if test="record.disparity != null" >
        disparity = #{record.disparity,jdbcType=VARCHAR},
      </if>
      <if test="record.empFk != null" >
        emp_fk = #{record.empFk,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update comparison
    set cid = #{record.cid,jdbcType=INTEGER},
      company = #{record.company,jdbcType=VARCHAR},
      turnonver = #{record.turnonver,jdbcType=DOUBLE},
      targetmoney = #{record.targetmoney,jdbcType=DOUBLE},
      plan = #{record.plan,jdbcType=VARCHAR},
      disparity = #{record.disparity,jdbcType=VARCHAR},
      emp_fk = #{record.empFk,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.offcn.entity.Comparison" >
    update comparison
    <set >
      <if test="company != null" >
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="turnonver != null" >
        turnonver = #{turnonver,jdbcType=DOUBLE},
      </if>
      <if test="targetmoney != null" >
        targetmoney = #{targetmoney,jdbcType=DOUBLE},
      </if>
      <if test="plan != null" >
        plan = #{plan,jdbcType=VARCHAR},
      </if>
      <if test="disparity != null" >
        disparity = #{disparity,jdbcType=VARCHAR},
      </if>
      <if test="empFk != null" >
        emp_fk = #{empFk,jdbcType=INTEGER},
      </if>
    </set>
    where cid = #{cid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.offcn.entity.Comparison" >
    update comparison
    set company = #{company,jdbcType=VARCHAR},
      turnonver = #{turnonver,jdbcType=DOUBLE},
      targetmoney = #{targetmoney,jdbcType=DOUBLE},
      plan = #{plan,jdbcType=VARCHAR},
      disparity = #{disparity,jdbcType=VARCHAR},
      emp_fk = #{empFk,jdbcType=INTEGER}
    where cid = #{cid,jdbcType=INTEGER}
  </update>
</mapper>